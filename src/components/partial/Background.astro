---
import "../../styles/global.css";
---

<div
  class="pointer-events-none absolute inset-0 w-full h-full blur-sm z-1 backdrop-opacity-90"
>
</div>
<div id="hexagonGrid" class="z-0 h-screen select-none"></div>

<section
  class="fixed top-0 left-0 w-screen h-screen -z-100 pointer-events-none"
>
<!-- <canvas id="particles" class="h-screen"></canvas> -->
</section>

<script>
  // HEXAGON GRID
  function hexagonGrid() {
    const HEXAGON_GRID = document.getElementById("hexagonGrid") as HTMLElement;
    const CONTAINER = HEXAGON_GRID.parentNode as HTMLElement;

    let wall = {
      width: CONTAINER.offsetWidth,
      height: CONTAINER.offsetHeight,
    };

    let rowsNumber = Math.ceil(wall.height / 80);
    let columnsNumber = Math.ceil(wall.width / 100) + 1;

    HEXAGON_GRID.innerHTML = "";

    for (let i = 0; i < rowsNumber; i++) {
      let row = document.createElement("div");
      row.className = "row";
      HEXAGON_GRID.appendChild(row);
    }

    let rows = HEXAGON_GRID.querySelectorAll(".row");

    for (let i = 0; i < rows.length; i++) {
      for (let j = 0; j < columnsNumber; j++) {
        let hexagon = document.createElement("div");
        hexagon.className = "hexagon";
        rows[i].appendChild(hexagon);
      }
    }
  }

  hexagonGrid();

  window.addEventListener("resize", function () {
    hexagonGrid();
  });

  // // FPS METER
  // (function () {
  //   let previousTime = Date.now();
  //   let frames = 0;
  //   let refreshRate = 1000;

  //   let fpsMeter = document.createElement("div");
  //   fpsMeter.id = "fpsMeter";
  //   document.body.appendChild(fpsMeter);

  //   requestAnimationFrame(function loop() {
  //     const TIME = Date.now();
  //     frames++;
  //     if (TIME > previousTime + refreshRate) {
  //       let fps = Math.round((frames * refreshRate) / (TIME - previousTime));
  //       previousTime = TIME;
  //       frames = 0;
  //       fpsMeter.innerHTML = "FPS: " + fps * (1000 / refreshRate);
  //     }
  //     requestAnimationFrame(loop);
  //   });

  //   fpsMeter.style.position = "fixed";
  //   fpsMeter.style.top = "25px";
  //   fpsMeter.style.right = "25px";
  //   fpsMeter.style.background = "rgba(0, 0, 0, 0.5)";
  //   fpsMeter.style.padding = "10px";
  //   fpsMeter.style.color = "rgba(255, 255, 255, 0.75)";
  //   fpsMeter.style.fontFamily = "Monospace";
  //   fpsMeter.style.fontSize = "24px";
  //   fpsMeter.style.zIndex = "10000";
  // })();
</script>
